<!DOCTYPE html>
<html lang="en" xmlns:th="http://www.thymeleaf.org">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title th:text="${interview_list_title}"></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/animate.css@4.1.1/animate.min.css">
    <link rel="stylesheet" type="text/css" th:href="@{/css/styles.css}" />
    <style>
        /* Additional custom styles */
        .animate__animated {
            animation-duration: 0.5s;
        }
        .interview-card, .table tr {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.4s ease, transform 0.4s ease;
        }
        .interview-card.show, .table tr.show {
            opacity: 1;
            transform: translateY(0);
        }
        .result-badge {
            padding: 6px 10px;
            border-radius: 6px;
            font-weight: 600;
            font-size: 0.75rem;
        }
        .result-passed {
            background: var(--gradient-success);
            color: white;
        }
        .result-failed {
            background: var(--gradient-danger);
            color: white;
        }
        .result-na {
            background: var(--gray-light);
            color: var(--gray-dark);
        }
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255,255,255,0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            transition: opacity 0.3s;
        }
        .spinner-grow {
            width: 3rem;
            height: 3rem;
            background-color: var(--primary);
        }
        .action-tooltip {
            position: relative;
        }
        .action-tooltip .tooltip-text {
            visibility: hidden;
            width: 120px;
            background-color: var(--dark);
            color: #fff;
            text-align: center;
            border-radius: 6px;
            padding: 5px;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -60px;
            opacity: 0;
            transition: opacity 0.3s;
        }
        .action-tooltip:hover .tooltip-text {
            visibility: visible;
            opacity: 1;
        }
        .role-badge {
            font-size: 0.7rem;
            padding: 3px 8px;
            border-radius: 12px;
            margin-left: 5px;
            background: var(--accent-light);
            color: var(--primary-dark);
        }
        .tab-container {
            margin-bottom: 20px;
        }
        .tab-button {
            border: none;
            padding: 10px 20px;
            background: white;
            border-radius: 10px 10px 0 0;
            font-weight: 600;
            color: var(--gray);
            margin-right: 5px;
            border-bottom: 3px solid transparent;
            transition: all 0.3s;
        }
        .tab-button.active {
            color: var(--primary);
            border-bottom: 3px solid var(--primary);
        }
        .tab-button:hover {
            color: var(--primary-dark);
        }
        .module-title {
            color: var(--primary-dark);
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        .submodule-title {
            color: var(--gray);
            font-weight: 500;
            font-size: 1.1rem;
            margin-bottom: 1.5rem;
        }
        .card-job-title {
            color: var(--primary);
            font-weight: 500;
            font-size: 0.9rem;
        }
    </style>
</head>

<body>
<!-- Loading overlay -->
<div class="loading-overlay" id="loadingOverlay">
    <div class="spinner-grow" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

<div class="d-flex">

    <!-- Left Sidebar -->
    <div class="sidebar" th:replace="~{component/left-sidebar::leftSidebar}"></div>

    <!-- Main Content -->
    <div class="content flex-grow-1">
        <!-- Top Sidebar / Header -->
        <div class="top-sidebar animate__animated animate__fadeInDown">
            <div class="top-sidebar-container">
                <div class="breadcrumb-section">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item">
                                <a href="/dashboard">
                                    <i class="fas fa-home"></i>
                                    <span th:text="${home_page}"></span>
                                </a>
                            </li>
                            <li class="breadcrumb-item active" aria-current="page">
                                <span th:text="${interview_schedules}"></span>
                            </li>
                        </ol>
                    </nav>
                </div>

                <div class="top-sidebar-actions">
                    <!-- Notifications -->
                    <div class="dropdown">
                        <button class="btn action-btn" type="button" data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <i class="fas fa-bell"></i>
                            <span class="notification-badge">3</span>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end notification-menu">
                            <li class="dropdown-header">
                                <h6 class="mb-0">Notifications</h6>
                                <span class="text-muted small">You have 3 unread messages</span>
                            </li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item notification-item unread" href="#">
                                <div class="notification-icon bg-primary">
                                    <i class="fas fa-calendar-check text-white"></i>
                                </div>
                                <div class="notification-text">
                                    <p class="mb-0">New interview scheduled</p>
                                    <span class="text-muted small">15 minutes ago</span>
                                </div>
                            </a></li>
                            <li><a class="dropdown-item notification-item unread" href="#">
                                <div class="notification-icon bg-success">
                                    <i class="fas fa-user-check text-white"></i>
                                </div>
                                <div class="notification-text">
                                    <p class="mb-0">Candidate profile updated</p>
                                    <span class="text-muted small">1 hour ago</span>
                                </div>
                            </a></li>
                            <li><a class="dropdown-item notification-item unread" href="#">
                                <div class="notification-icon bg-warning">
                                    <i class="fas fa-clock text-white"></i>
                                </div>
                                <div class="notification-text">
                                    <p class="mb-0">Interview reminder</p>
                                    <span class="text-muted small">Tomorrow, 10:00 AM</span>
                                </div>
                            </a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item text-center small" href="#">View all notifications</a></li>
                        </ul>
                    </div>

                    <!-- Settings -->
                    <div class="dropdown">
                        <button class="btn action-btn" type="button" data-bs-toggle="dropdown"
                                aria-expanded="false">
                            <i class="fas fa-cog"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item" href="#"><i class="fas fa-user-cog me-2"></i>Account
                                Settings</a></li>
                            <li><a class="dropdown-item" href="#"><i class="fas fa-palette me-2"></i>Appearance</a>
                            </li>
                            <li><a class="dropdown-item" href="#"><i class="fas fa-bell me-2"></i>Notification
                                Settings</a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item" href="#"><i class="fas fa-question-circle me-2"></i>Help
                                Center</a></li>
                        </ul>
                    </div>

                    <!-- User Profile -->
                    <div class="dropdown">
                        <div class="user-profile" data-bs-toggle="dropdown">
                            <div class="user-avatar-container">
                                <img th:src="${session.account != null ? 'https://ui-avatars.com/api/?name=' + session.account.getFullname() + '&background=random' : 'https://ui-avatars.com/api/?name=User&background=random'}"
                                     alt="User" class="user-avatar">
                                <span class="user-status"></span>
                            </div>
                            <div class="user-info d-none d-md-flex">
                                    <span class="user-name"
                                          th:text="${session.account != null ? session.account.getFullname() : 'User Name'}">User
                                        Name</span>
                                <span class="user-role">
                                        <span th:text="${session.account != null ? session.account.getDepartmentName() : 'Department'}">Department</span>
                                        <span class="role-badge" th:if="${session.account != null}"
                                              th:text="${session.account.getRole()}">Role</span>
                                    </span>
                            </div>
                            <button class="user-dropdown-btn">
                                <i class="fas fa-chevron-down"></i>
                            </button>
                        </div>
                        <ul class="dropdown-menu dropdown-menu-end">
                            <li><a class="dropdown-item" href="#"><i class="fas fa-user me-2"></i>My Profile</a>
                            </li>
                            <li><a class="dropdown-item" href="#"><i class="fas fa-history me-2"></i>Activity
                                Log</a></li>
                            <li>
                                <hr class="dropdown-divider">
                            </li>
                            <li><a class="dropdown-item" href="#" onclick="logout()"><i
                                    class="fas fa-sign-out-alt me-2"></i>Logout</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>

        <!-- Page Header -->
        <div class="d-flex flex-column mb-4 animate__animated animate__fadeInUp">
            <h1 class="module-title">Interview Schedule</h1>
            <p class="submodule-title">Interview Schedule List</p>
        </div>

        <!-- Candidate Dashboard Stats Section -->
        <div class="candidate-dashboard">
        <div class="stats-section animate__animated animate__fadeInUp" style="animation-delay: 0.1s;">
            <div class="stat-card">
                <i class="fas fa-users stat-card-bg-icon"></i>
                <div class="stat-card-title">Total Candidates</div>
                <div class="stat-card-value" th:text="${candidatePage.totalElements}">50</div>
                <div class="stat-card-info positive">
                    <i class="fas fa-arrow-up"></i> 10% from last month
                </div>
            </div>
            <div class="stat-card">
                <i class="fas fa-user-check stat-card-bg-icon"></i>
                <div class="stat-card-title">Interviewed</div>
                <div class="stat-card-value" id="interviewedCount">0</div>
                <div class="stat-card-info positive">
                    <i class="fas fa-arrow-up"></i> 5% from last month
                </div>
            </div>
            <div class="stat-card">
                <i class="fas fa-user-clock stat-card-bg-icon"></i>
                <div class="stat-card-title">Pending Interviews</div>
                <div class="stat-card-value" id="pendingCount">0</div>
                <div class="stat-card-info negative">
                    <i class="fas fa-arrow-down"></i> 2% from last month
                </div>
            </div>
            <div class="stat-card">
                <i class="fas fa-user-tie stat-card-bg-icon"></i>
                <div class="stat-card-title">Success Rate</div>
                <div class="stat-card-value" id="candidateSuccessRate">0%</div>
                <div class="stat-card-info positive">
                    <i class="fas fa-arrow-up"></i> 4% from last month
                </div>
            </div>
        </div>
        </div>

        <!-- Tab Container -->
        <div class="tab-container animate__animated animate__fadeInUp" style="animation-delay: 0.2s;">
            <button class="tab-button active" id="allTab">All Interviews</button>
            <button class="tab-button" id="todayTab">Today</button>
            <button class="tab-button" id="upcomingTab">Upcoming</button>
            <button class="tab-button" id="completedTab">Completed</button>
        </div>

        <!-- Search form -->
        <div class="search-section animate__animated animate__fadeInUp" style="animation-delay: 0.3s;">
            <form method="get" th:action="@{/interview/list}" class="row g-3" id="searchForm">
                <div class="col-md-3">
                    <label for="search" class="form-label" th:text="${searchTitle}">Search</label>
                    <div class="input-group">
                            <span class="input-group-text">
                                <i class="fas fa-search"></i>
                            </span>
                        <input type="text" class="form-control" id="search" name="search"
                               th:value="${param.search ?: ''}" th:placeholder="${enter_title_location}">
                    </div>
                </div>

                <div class="col-md-3">
                    <label for="status" class="form-label" th:text="${statusTitle}">Status</label>
                    <select class="form-select" id="status" name="status">
                        <option value="" th:text="${all_status}" th:selected="${param.status == null}">All Status</option>
                        <option value="NEW" th:selected="${param.status == 'NEW'}" th:text="${new_title}">New</option>
                        <option value="INVITED" th:selected="${param.status == 'INVITED'}" th:text="${invited_title}">Invited</option>
                        <option value="INTERVIEWED" th:selected="${param.status == 'INTERVIEWED'}" th:text="${interviewed_title}">Interviewed</option>
                        <option value="CANCELLED" th:selected="${param.status == 'CANCELLED'}" th:text="${canceled_title}">Cancelled</option>
                    </select>
                </div>

                <div class="col-md-3">
                    <label for="employeeId" class="form-label">Interviewer</label>
                    <select class="form-select" id="employeeId" name="employeeId">
                        <option value="">All Interviewers</option>
                        <option th:each="interviewer : ${interviewers}"
                                th:value="${interviewer.userID}"
                                th:text="${interviewer.fullname}"
                                th:selected="${param.employeeId != null && param.employeeId == interviewer.userID}">
                            Interviewer Name
                        </option>
                    </select>
                </div>

                <div class="col-md-3 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary w-100" id="searchButton">
                        <i class="fa-solid fa-search me-1"></i>
                        <span th:text="${searchTitle}">Search</span>
                    </button>
                </div>
            </form>
        </div>

        <!-- View toggle buttons -->
        <div class="d-flex justify-content-between align-items-center my-4 animate__animated animate__fadeInUp" style="animation-delay: 0.4s;">
            <a class="btn btn-success" th:href="@{/interview/createInterviewView}"
               th:if="${session.account != null && (session.account.getRole() == 'ROLE_MANAGER' || session.account.getRole() == 'ROLE_RECRUITER' || session.account.getRole() == 'ROLE_ADMIN')}">
                <i class="fa fa-plus me-1"></i>
                <span th:text="${create_new_interview}">Create New Interview</span>
            </a>
            <div class="ms-auto"></div>
            <div class="view-toggle">
                <button id="gridViewBtn" class="btn btn-outline-primary active">
                    <i class="fas fa-th"></i>
                    <span th:text="${grid_view}">Grid View</span>
                </button>
                <button id="tableViewBtn" class="btn btn-outline-primary">
                    <i class="fas fa-list"></i>
                    <span th:text="${table_view}">Table View</span>
                </button>
            </div>
        </div>

        <!-- Grid View of Interviews -->
        <div id="gridView" class="interview-grid">
            <!-- Display each interview as a card -->
            <div th:each="interview, iterStat : ${interviewPage.content}" class="interview-card" th:data-status="${interview.status}" th:data-result="${interview.result}">
                <div class="status-badge">
                    <span th:if="${interview.status == 'NEW'}" class="badge badge-new" th:text="${new_title}">New</span>
                    <span th:if="${interview.status == 'INVITED'}" class="badge badge-invited" th:text="${invited_title}">Invited</span>
                    <span th:if="${interview.status == 'INTERVIEWED'}" class="badge badge-interviewed" th:text="${interviewed_title}">Interviewed</span>
                    <span th:if="${interview.status == 'CANCELLED'}" class="badge badge-cancelled" th:text="${canceled_title}">Cancelled</span>
                </div>

                <div class="interview-card-header">
                    <h5 th:text="${interview.title}">Interview Title</h5>
                    <small>ID: <span th:text="${interview.id}">123</span></small>
                </div>

                <div class="interview-card-body">
                    <div class="interview-detail">
                        <i class="fas fa-user"></i>
                        <span class="candidate-name" th:text="${interview.candidateName}">Candidate Name</span>
                    </div>
                    <div class="interview-detail">
                        <i class="fas fa-users"></i>
                        <span th:text="${interview.interviewerNames}">Interviewer Names</span>
                    </div>
                    <div class="interview-detail">
                        <i class="far fa-calendar-alt"></i>
                        <span th:text="${#temporals.format(interview.scheduleTime, 'dd/MM/yyyy') + ' ' +
                                interview.startTime + ' - ' + interview.endTime}">01/04/2025 10:00 - 11:00</span>
                    </div>
                    <div class="interview-detail">
                        <i class="fas fa-map-marker-alt"></i>
                        <span th:text="${interview.locations}">Location</span>
                    </div>
                    <div class="interview-detail">
                        <i class="fas fa-briefcase"></i>
                        <span class="card-job-title" th:text="${interview.jobTitle}">Job Title</span>
                    </div>
                    <div class="interview-detail">
                        <i class="fas fa-poll"></i>
                        <span>Result: </span>
                        <span th:if="${interview.result != null && interview.result.toLowerCase().contains('pass')}"
                              class="result-badge result-passed">Passed</span>
                        <span th:if="${interview.result != null && interview.result.toLowerCase().contains('fail')}"
                              class="result-badge result-failed">Failed</span>
                        <span th:if="${interview.result == null || (!interview.result.toLowerCase().contains('pass') && !interview.result.toLowerCase().contains('fail'))}"
                              class="result-badge result-na">N/A</span>
                    </div>
                </div>

                <div class="interview-card-footer">
                    <div class="d-flex gap-2">
                        <!-- View button - available to all -->
                        <a class="btn btn-sm btn-info action-tooltip" th:href="@{/interview/interviewDetail(id=${interview.id})}">
                            <i class="fa fa-eye"></i>
                            <span class="tooltip-text">View Details</span>
                        </a>

                        <!-- Edit button - not for Interviewer -->
                        <a class="btn btn-sm btn-warning action-tooltip"
                           th:if="${session.account != null && session.account.getRole() != 'ROLE_INTERVIEWER'}"
                           th:href="@{/interview/editInterviewView(id=${interview.id})}">
                            <i class="fa fa-edit"></i>
                            <span class="tooltip-text">Edit Interview</span>
                        </a>

                        <!-- Submit result - only for Interviewer and when status is not CANCELLED or INTERVIEWED -->
                        <a class="btn btn-sm btn-success action-tooltip"
                           th:if="${session.account != null && session.account.getRole() == 'ROLE_INTERVIEWER' && interview.status != 'CANCELLED' && interview.status != 'INTERVIEWED'}"
                           th:href="@{/interview/submitResultView(id=${interview.id})}">
                            <i class="fa fa-check-circle"></i>
                            <span class="tooltip-text">Submit Result</span>
                        </a>

                        <!-- Send Reminder - for Recruiter/Manager/Admin when status is NEW -->
                        <a class="btn btn-sm btn-secondary action-tooltip"
                           th:if="${session.account != null && (session.account.getRole() == 'ROLE_RECRUITER' || session.account.getRole() == 'ROLE_MANAGER' || session.account.getRole() == 'ROLE_ADMIN') && interview.status == 'NEW'}"
                           th:href="@{/interview/reminder(interviewId=${interview.id})}">
                            <i class="fa fa-bell"></i>
                            <span class="tooltip-text">Send Reminder</span>
                        </a>

                        <!-- Cancel button - for Recruiter/Manager/Admin when status is not CANCELLED or INTERVIEWED -->
                        <a class="btn btn-sm btn-danger action-tooltip"
                           th:if="${session.account != null && (session.account.getRole() == 'ROLE_RECRUITER' || session.account.getRole() == 'ROLE_MANAGER' || session.account.getRole() == 'ROLE_ADMIN') && interview.status != 'CANCELLED' && interview.status != 'INTERVIEWED'}"
                           th:href="@{/interview/cancelInterview(id=${interview.id})}"
                           onclick="return confirm('Are you sure you want to cancel this interview?')">
                            <i class="fa fa-times-circle"></i>
                            <span class="tooltip-text">Cancel Interview</span>
                        </a>
                    </div>
                </div>
            </div>
        </div>

        <!-- Table View of Interviews (hidden by default) -->
        <div id="tableView" class="table-container animate__animated animate__fadeIn" style="display: none;">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                    <tr>
                        <th th:text="${id_label}">ID</th>
                        <th th:text="${title_label}">Title</th>
                        <th th:text="${candidate}">Candidate</th>
                        <th>Interviewer</th>
                        <th th:text="${schedule_time_title}">Schedule Time</th>
                        <th th:text="${location_label}">Location</th>
                        <th>Job</th>
                        <th>Result</th>
                        <th th:text="${statusTitle}">Status</th>
                        <th th:text="${action}">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    <tr th:each="interview, iterStat : ${interviewPage.content}" th:data-status="${interview.status}" th:data-result="${interview.result}">
                        <td th:text="${interview.id}"></td>
                        <td>
                            <span th:text="${interview.title}" class="fw-medium"></span>
                        </td>
                        <td th:text="${interview.candidateName}"></td>
                        <td th:text="${interview.interviewerNames}"></td>
                        <td>
                            <i class="far fa-calendar-alt me-1"></i>
                            <span th:text="${#temporals.format(interview.scheduleTime, 'dd/MM/yyyy') + ' ' +
                                        interview.startTime + ' - ' + interview.endTime}"></span>
                        </td>
                        <td>
                            <i class="fas fa-map-marker-alt me-1 text-danger"></i>
                            <span th:text="${interview.locations}"></span>
                        </td>
                        <td th:text="${interview.jobTitle}"></td>
                        <td>
                                    <span th:if="${interview.result != null && interview.result.toLowerCase().contains('pass')}"
                                          class="result-badge result-passed">Passed</span>
                            <span th:if="${interview.result != null && interview.result.toLowerCase().contains('fail')}"
                                  class="result-badge result-failed">Failed</span>
                            <span th:if="${interview.result == null || (!interview.result.toLowerCase().contains('pass') && !interview.result.toLowerCase().contains('fail'))}"
                                  class="result-badge result-na">N/A</span>
                        </td>
                        <td>
                            <span th:if="${interview.status == 'NEW'}" class="badge badge-new" th:text="${new_title}"></span>
                            <span th:if="${interview.status == 'INVITED'}" class="badge badge-invited" th:text="${invited_title}"></span>
                            <span th:if="${interview.status == 'INTERVIEWED'}" class="badge badge-interviewed" th:text="${interviewed_title}"></span>
                            <span th:if="${interview.status == 'CANCELLED'}" class="badge badge-cancelled" th:text="${canceled_title}"></span>
                        </td>
                        <td>
                            <div class="d-flex gap-2">
                                <!-- View button - available to all -->
                                <a class="btn btn-sm btn-info action-tooltip" th:href="@{/interview/interviewDetail(id=${interview.id})}">
                                    <i class="fa fa-eye"></i>
                                    <span class="tooltip-text">View Details</span>
                                </a>

                                <!-- Edit button - not for Interviewer -->
                                <a class="btn btn-sm btn-warning action-tooltip"
                                   th:if="${session.account != null && session.account.getRole() != 'ROLE_INTERVIEWER'}"
                                   th:href="@{/interview/editInterviewView(id=${interview.id})}">
                                    <i class="fa fa-edit"></i>
                                    <span class="tooltip-text">Edit Interview</span>
                                </a>

                                <!-- Submit result - only for Interviewer and when status is not CANCELLED or INTERVIEWED -->
                                <a class="btn btn-sm btn-success action-tooltip"
                                   th:if="${session.account != null && session.account.getRole() == 'ROLE_INTERVIEWER' && interview.status != 'CANCELLED' && interview.status != 'INTERVIEWED'}"
                                   th:href="@{/interview/submitResultView(id=${interview.id})}">
                                    <i class="fa fa-check-circle"></i>
                                    <span class="tooltip-text">Submit Result</span>
                                </a>

                                <!-- Send Reminder - for Recruiter/Manager/Admin when status is NEW -->
                                <a class="btn btn-sm btn-secondary action-tooltip"
                                   th:if="${session.account != null && (session.account.getRole() == 'ROLE_RECRUITER' || session.account.getRole() == 'ROLE_MANAGER' || session.account.getRole() == 'ROLE_ADMIN') && interview.status == 'NEW'}"
                                   th:href="@{/interview/reminder(interviewId=${interview.id})}">
                                    <i class="fa fa-bell"></i>
                                    <span class="tooltip-text">Send Reminder</span>
                                </a>

                                <!-- Cancel button - for Recruiter/Manager/Admin when status is not CANCELLED or INTERVIEWED -->
                                <a class="btn btn-sm btn-danger action-tooltip"
                                   th:if="${session.account != null && (session.account.getRole() == 'ROLE_RECRUITER' || session.account.getRole() == 'ROLE_MANAGER' || session.account.getRole() == 'ROLE_ADMIN') && interview.status != 'CANCELLED' && interview.status != 'INTERVIEWED'}"
                                   th:href="@{/interview/cancelInterview(id=${interview.id})}"
                                   onclick="return confirm('Are you sure you want to cancel this interview?')">
                                    <i class="fa fa-times-circle"></i>
                                    <span class="tooltip-text">Cancel Interview</span>
                                </a>
                            </div>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- No results message -->
        <div th:if="${interviewPage.content.empty}" class="no-results animate__animated animate__fadeIn">
            <i class="fas fa-search"></i>
            <h4 th:text="${no_job_found}">No interviews found</h4>
            <p>No item matches with your search data. Please try again.</p>
        </div>

        <!-- Pagination controls -->
        <nav th:if="${interviewPage.totalPages} > 1" class="animate__animated animate__fadeInUp" style="animation-delay: 0.5s;">
            <ul class="pagination">
                <li class="page-item" th:classappend="${interviewPage.number == 0}? 'disabled'">
                    <a class="page-link" th:href="@{/interview/list(page=${interviewPage.number}-1,
                                            size=${interviewPage.size},
                                            search=${param.search},
                                            status=${param.status},
                                            employeeId=${param.employeeId})}" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                <li class="page-item" th:each="pg : ${#numbers.sequence(0, ${interviewPage.getTotalPages() - 1})}"
                    th:classappend="${pg == interviewPage.number}? 'active'">
                    <a class="page-link" th:href="@{/interview/list(page=${pg},
                                            size=${interviewPage.size},
                                            search=${param.search},
                                            status=${param.status},
                                            employeeId=${param.employeeId})}" th:text="${pg + 1}"></a>
                </li>

                <li class="page-item"
                    th:classappend="${interviewPage.number == ${interviewPage.getTotalPages() - 1}}? 'disabled'">
                    <a class="page-link" th:href="@{/interview/list(page=${interviewPage.number}+1,
                                            size=${interviewPage.size},
                                            search=${param.search},
                                            status=${param.status},
                                            employeeId=${param.employeeId})}" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Hide loading overlay
        setTimeout(() => {
            const loadingOverlay = document.getElementById('loadingOverlay');
            loadingOverlay.style.opacity = '0';
            setTimeout(() => {
                loadingOverlay.style.display = 'none';
            }, 300);
        }, 500);

        // Initialize Bootstrap dropdowns
        var dropdownElementList = [].slice.call(document.querySelectorAll('.dropdown-toggle'))
        var dropdownList = dropdownElementList.map(function (dropdownToggleEl) {
            return new bootstrap.Dropdown(dropdownToggleEl)
        });

        // Animate elements sequentially
        const animateElements = (selector, delay = 100) => {
            const elements = document.querySelectorAll(selector);
            elements.forEach((element, index) => {
                setTimeout(() => {
                    element.classList.add('show');
                }, index * delay);
            });
        };

        // Stagger animations for different elements
        setTimeout(() => animateElements('.interview-card'), 600);
        setTimeout(() => animateElements('tbody tr'), 600);

        // View toggle functionality
        const gridViewBtn = document.getElementById('gridViewBtn');
        const tableViewBtn = document.getElementById('tableViewBtn');
        const gridView = document.getElementById('gridView');
        const tableView = document.getElementById('tableView');

        if (gridViewBtn && tableViewBtn && gridView && tableView) {
            gridViewBtn.addEventListener('click', function () {
                gridView.style.display = 'grid';
                tableView.style.display = 'none';
                gridViewBtn.classList.add('active');
                tableViewBtn.classList.remove('active');
                // Re-trigger animations
                animateElements('.interview-card');
            });

            tableViewBtn.addEventListener('click', function () {
                gridView.style.display = 'none';
                tableView.style.display = 'block';
                gridViewBtn.classList.remove('active');
                tableViewBtn.classList.add('active');
                // Re-trigger animations
                animateElements('tbody tr');
            });
        }

        // Calculate stats for dashboard
        const calculateStats = () => {
            const interviews = document.querySelectorAll('[data-status]');
            let completed = 0;
            let upcoming = 0;
            let succeeded = 0;
            let total = interviews.length;

            interviews.forEach(interview => {
                const status = interview.getAttribute('data-status');
                const result = interview.getAttribute('data-result');

                if (status === 'INTERVIEWED') {
                    completed++;
                    if (result && result.toLowerCase().includes('pass')) {
                        succeeded++;
                    }
                } else if (status === 'NEW' || status === 'INVITED') {
                    upcoming++;
                }
            });

            const successRate = total > 0 ? Math.round((succeeded / total) * 100) : 0;

            document.getElementById('completedCount').textContent = completed;
            document.getElementById('upcomingCount').textContent = upcoming;
            document.getElementById('successRate').textContent = successRate + '%';
        };

        calculateStats();

        // Tab functionality
        const allTab = document.getElementById('allTab');
        const todayTab = document.getElementById('todayTab');
        const upcomingTab = document.getElementById('upcomingTab');
        const completedTab = document.getElementById('completedTab');

        const filterInterviews = (filterType) => {
            const interviews = document.querySelectorAll('.interview-card');
            const tableRows = document.querySelectorAll('tbody tr');

            const today = new Date().toISOString().split('T')[0];

            // Remove all 'show' classes first
            interviews.forEach(interview => {
                interview.classList.remove('show');
            });
            tableRows.forEach(row => {
                row.classList.remove('show');
            });

            // Apply the filter
            interviews.forEach(interview => {
                const status = interview.getAttribute('data-status');
                const scheduleDate = interview.querySelector('.interview-detail:nth-child(3) span').textContent.split(' ')[0];

                let show = false;

                if (filterType === 'all') {
                    show = true;
                } else if (filterType === 'today') {
                    // Convert date formats for comparison
                    const dateParts = scheduleDate.split('/');
                    const interviewDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;
                    show = interviewDate === today;
                } else if (filterType === 'upcoming') {
                    show = status === 'NEW' || status === 'INVITED';
                } else if (filterType === 'completed') {
                    show = status === 'INTERVIEWED';
                }

                if (show) {
                    interview.style.display = '';
                    setTimeout(() => {
                        interview.classList.add('show');
                    }, 10);
                } else {
                    interview.style.display = 'none';
                }
            });

            // Apply same filters to table rows
            tableRows.forEach(row => {
                const status = row.getAttribute('data-status');
                const scheduleDate = row.querySelector('td:nth-child(5) span').textContent.split(' ')[0];

                let show = false;

                if (filterType === 'all') {
                    show = true;
                } else if (filterType === 'today') {
                    // Convert date formats for comparison
                    const dateParts = scheduleDate.split('/');
                    const interviewDate = `${dateParts[2]}-${dateParts[1]}-${dateParts[0]}`;
                    show = interviewDate === today;
                } else if (filterType === 'upcoming') {
                    show = status === 'NEW' || status === 'INVITED';
                } else if (filterType === 'completed') {
                    show = status === 'INTERVIEWED';
                }

                if (show) {
                    row.style.display = '';
                    setTimeout(() => {
                        row.classList.add('show');
                    }, 10);
                } else {
                    row.style.display = 'none';
                }
            });

            // Show no results message if needed
            const noResultsMessage = document.querySelector('.no-results');
            if (noResultsMessage) {
                const anyVisible = [...interviews].some(interview => interview.style.display !== 'none');
                noResultsMessage.style.display = anyVisible ? 'none' : 'block';
            }
        };

        // Set active tab
        const setActiveTab = (activeTab) => {
            [allTab, todayTab, upcomingTab, completedTab].forEach(tab => {
                tab.classList.remove('active');
            });
            activeTab.classList.add('active');
        };

        allTab.addEventListener('click', function() {
            setActiveTab(this);
            filterInterviews('all');
        });

        todayTab.addEventListener('click', function() {
            setActiveTab(this);
            filterInterviews('today');
        });

        upcomingTab.addEventListener('click', function() {
            setActiveTab(this);
            filterInterviews('upcoming');
        });

        completedTab.addEventListener('click', function() {
            setActiveTab(this);
            filterInterviews('completed');
        });

        // Show all interviews by default
        filterInterviews('all');

        // Add loading indicator to search form
        const searchForm = document.getElementById('searchForm');
        const searchButton = document.getElementById('searchButton');

        if (searchForm) {
            searchForm.addEventListener('submit', function() {
                searchButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Searching...';
                searchButton.disabled = true;

                // Re-enable after 3 seconds in case form doesn't submit
                setTimeout(() => {
                    searchButton.innerHTML = '<i class="fa-solid fa-search me-1"></i> Search';
                    searchButton.disabled = false;
                }, 3000);
            });
        }

        // Logout function
        window.logout = function () {
            if (confirm('Are you sure you want to logout?')) {
                window.location.href = '/logout';
            }
        }
    });
</script>
</body>

</html>